{"version":3,"sources":["webpack:///./node_modules/@reach/disclosure/dist/disclosure.esm.js","webpack:///./src/components/pages/about-data/data-summary.js","webpack:///./src/pages/about-data/data-summary.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","DisclosureStates","DisclosureContext","useDisclosureContext","Disclosure","_ref","children","_ref$defaultOpen","defaultOpen","onChange","openProp","open","props","wasControlled","isControlled","current","id","String","undefined","panelId","_useState","setOpen","context","disclosureId","onSelect","createElement","Provider","value","DisclosureButton","_ref2","forwardedRef","_ref2$as","as","Comp","onClick","onMouseDown","onPointerDown","_useDisclosureContext","ownRef","ref","assign","Open","Collapsed","event","preventDefault","focus","DisclosurePanel","_ref3","_useDisclosureContext2","hidden","tabIndex","categoryOrder","DatasetResource","resource","useState","isOpen","setIsOpen","className","summaryStyle","disclosureButton","name","aria-hidden","disclosurePanel","hideTitle","Summary","summary","slug","header","title","dangerouslySetInnerHTML","__html","childContentfulDataSummaryDescriptionTextNode","childMarkdownRemark","html","links","href","sourceLink","downloadLink","definitionsLink","childContentfulDataSummaryUseTextNode","resources","map","DataSummary","data","useStaticQuery","categories","allContentfulDataSummaryCategory","nodes","find","node","topMargin","toc","summaries","to","category","DataSummaryPage","centered","content","contentfulSnippet","childContentfulSnippetContentTextNode","contentful_id"],"mappings":"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","file":"component---src-pages-about-data-data-summary-js-996995d9703344ec6837.js","sourcesContent":["import React, { useRef, useState, useContext, forwardRef } from 'react';\nimport { makeId, warning, forwardRefWithAs, useForkedRef, wrapEvent, createNamedContext } from '@reach/utils';\nimport { useId } from '@reach/auto-id';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar DisclosureContext = /*#__PURE__*/createNamedContext(\"DisclosureContext\", {});\n\nvar useDisclosureContext = function useDisclosureContext() {\n  return useContext(DisclosureContext);\n}; ////////////////////////////////////////////////////////////////////////////////\n\n\nvar DisclosureStates;\n\n(function (DisclosureStates) {\n  DisclosureStates[\"Open\"] = \"open\";\n  DisclosureStates[\"Collapsed\"] = \"collapsed\";\n})(DisclosureStates || (DisclosureStates = {})); ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * Disclosure\r\n *\r\n * The wrapper component and context provider for a disclosure's button and\r\n * panel components. A disclosure should only have one button and one panel\r\n * descendant.\r\n *\r\n * @see Docs https://reacttraining.com/reach-ui/disclosure#disclosure-1\r\n *\r\n * @param props\r\n */\n\n\nvar Disclosure = function Disclosure(_ref) {\n  var children = _ref.children,\n      _ref$defaultOpen = _ref.defaultOpen,\n      defaultOpen = _ref$defaultOpen === void 0 ? false : _ref$defaultOpen,\n      onChange = _ref.onChange,\n      openProp = _ref.open,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"defaultOpen\", \"onChange\", \"open\"]);\n  /*\r\n   * You shouldn't switch between controlled/uncontrolled. We'll check for a\r\n   * controlled component and track any changes in a ref to show a warning.\r\n   */\n\n\n  var wasControlled = openProp != null;\n\n  var _useRef = useRef(wasControlled),\n      isControlled = _useRef.current;\n\n  var id = useId(props.id != null ? String(props.id) : undefined) || \"disclosure\";\n  var panelId = makeId(\"panel\", id);\n\n  var _useState = useState(isControlled ? openProp : defaultOpen),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(!(isControlled && !wasControlled || !isControlled && wasControlled), \"Disclosure is changing from controlled to uncontrolled. Disclosure should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Disclosure for the lifetime of the component. Check the `open` prop being passed in.\") : void 0;\n  }\n\n  function onSelect() {\n    onChange && onChange();\n\n    if (!isControlled) {\n      setOpen(!open);\n    }\n  }\n\n  var context = {\n    disclosureId: id,\n    onSelect: onSelect,\n    open: open,\n    panelId: panelId\n  };\n\n  if (isControlled && openProp !== open) {\n    /*\r\n     * If the component is controlled, we'll sync internal state with the\r\n     * controlled state\r\n     */\n    setOpen(openProp);\n  }\n\n  return React.createElement(DisclosureContext.Provider, {\n    value: context\n  }, children);\n};\n\nif (process.env.NODE_ENV !== \"production\") {\n  Disclosure.displayName = \"Disclosure\";\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * DisclosureButton\r\n *\r\n * The trigger button a user clicks to interact with a disclosure.\r\n *\r\n * @see Docs https://reacttraining.com/reach-ui/disclosure#disclosurebutton\r\n */\n\n\nvar DisclosureButton = /*#__PURE__*/forwardRefWithAs(function DisclosureButton(_ref2, forwardedRef) {\n  var _ref2$as = _ref2.as,\n      Comp = _ref2$as === void 0 ? \"button\" : _ref2$as,\n      children = _ref2.children,\n      onClick = _ref2.onClick,\n      onMouseDown = _ref2.onMouseDown,\n      onPointerDown = _ref2.onPointerDown,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"as\", \"children\", \"onClick\", \"onMouseDown\", \"onPointerDown\"]);\n\n  var _useDisclosureContext = useDisclosureContext(),\n      onSelect = _useDisclosureContext.onSelect,\n      open = _useDisclosureContext.open,\n      panelId = _useDisclosureContext.panelId;\n\n  var ownRef = useRef(null);\n  var ref = useForkedRef(forwardedRef, ownRef);\n\n  function handleClick(event) {\n    event.preventDefault();\n    ownRef.current && ownRef.current.focus();\n    onSelect();\n  }\n\n  return React.createElement(Comp // Optionally, the element with role `button` has a value specified for\n  // `aria-controls` that refers to the element that contains all the\n  // content that is shown or hidden.\n  // https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\n  , Object.assign({\n    \"aria-controls\": panelId,\n    \"aria-expanded\": open\n  }, props, {\n    \"data-reach-disclosure-button\": \"\",\n    \"data-state\": open ? DisclosureStates.Open : DisclosureStates.Collapsed,\n    ref: ref,\n    onClick: wrapEvent(onClick, handleClick)\n  }), children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  DisclosureButton.displayName = \"DisclosureButton\";\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * DisclosurePanel\r\n *\r\n * The collapsible panel in which inner content for an disclosure item is\r\n * rendered.\r\n *\r\n * @see Docs https://reacttraining.com/reach-ui/disclosure#disclosurepanel\r\n */\n\n\nvar DisclosurePanel = /*#__PURE__*/forwardRef(function DisclosurePanel(_ref3, forwardedRef) {\n  var children = _ref3.children,\n      props = _objectWithoutPropertiesLoose(_ref3, [\"children\"]);\n\n  var _useDisclosureContext2 = useDisclosureContext(),\n      panelId = _useDisclosureContext2.panelId,\n      open = _useDisclosureContext2.open;\n\n  return React.createElement(\"div\", Object.assign({\n    ref: forwardedRef,\n    hidden: !open\n  }, props, {\n    \"data-reach-disclosure-panel\": \"\",\n    \"data-state\": open ? DisclosureStates.Open : DisclosureStates.Collapsed,\n    id: panelId,\n    tabIndex: -1\n  }), children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  DisclosurePanel.displayName = \"DisclosurePanel\";\n}\n\nexport { Disclosure, DisclosureButton, DisclosurePanel, DisclosureStates };","import React, { useState } from 'react'\nimport { graphql, useStaticQuery, Link } from 'gatsby'\nimport {\n  Disclosure,\n  DisclosureButton,\n  DisclosurePanel,\n} from '@reach/disclosure'\nimport { TableOfContentsWrapper } from '~components/common/table-of-contents'\nimport { Resource } from './data-summary-resources'\nimport summaryStyle from './data-summary.module.scss'\n\nconst categoryOrder = [\n  'testing-outcomes',\n  'race-and-ethnicity',\n  'long-term-care',\n  'vaccine-metadata',\n  'city-data',\n  'miscellaneous-repositories',\n]\n\nconst DatasetResource = ({ resource }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  return (\n    <Disclosure open={isOpen} onChange={() => setIsOpen(!isOpen)}>\n      <DisclosureButton className={summaryStyle.disclosureButton}>\n        {resource.name}\n        <span aria-hidden>{isOpen ? <>↑</> : <>↓</>}</span>\n      </DisclosureButton>\n      <DisclosurePanel className={summaryStyle.disclosurePanel}>\n        <Resource resource={resource} hideTitle={false} />\n      </DisclosurePanel>\n    </Disclosure>\n  )\n}\n\nconst Summary = ({ summary }) => (\n  <div className={summaryStyle.summary} id={summary.slug}>\n    <h3 className={summaryStyle.header}>{summary.title}</h3>\n    <div\n      dangerouslySetInnerHTML={{\n        __html:\n          summary.childContentfulDataSummaryDescriptionTextNode\n            .childMarkdownRemark.html,\n      }}\n    />\n    <ul className={summaryStyle.links}>\n      <li>\n        <a href={summary.sourceLink}>Data source</a>\n      </li>\n      {summary.downloadLink && (\n        <li>\n          <a href={summary.downloadLink}>Download data</a>\n        </li>\n      )}\n      {summary.definitionsLink && (\n        <li>\n          <a href={summary.definitionsLink}>Definitions</a>\n        </li>\n      )}\n    </ul>\n    <h4 className={summaryStyle.header}>How to use it</h4>\n    <div\n      dangerouslySetInnerHTML={{\n        __html:\n          summary.childContentfulDataSummaryUseTextNode.childMarkdownRemark\n            .html,\n      }}\n    />\n    {summary.resources && (\n      <>\n        <h4>Related federal data</h4>\n        {summary.resources.map(resource => (\n          <DatasetResource resource={resource} />\n        ))}\n      </>\n    )}\n  </div>\n)\n\nconst DataSummary = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allContentfulDataSummaryCategory {\n        nodes {\n          title\n          slug\n          summaries {\n            title\n            slug\n            sourceLink\n            downloadLink\n            definitionsLink\n            childContentfulDataSummaryUseTextNode {\n              childMarkdownRemark {\n                html\n              }\n            }\n            childContentfulDataSummaryDescriptionTextNode {\n              childMarkdownRemark {\n                html\n              }\n            }\n            resources {\n              name\n              contentful_id\n              updatedAt(formatString: \"MMMM D, yyyy\")\n              linkUrl\n              downloadLinkUrl\n              description {\n                childMarkdownRemark {\n                  html\n                }\n              }\n              data_summary {\n                title\n                slug\n              }\n              relatedPosts {\n                title\n                slug\n                sys {\n                  contentType {\n                    sys {\n                      id\n                    }\n                  }\n                }\n              }\n              agency\n              chartLink\n              geographicUnits\n              queryLink\n              startDate(formatString: \"MMMM D, yyyy\")\n              timeseriesUnit\n              updateFrequency\n              youtubeVideoTitle\n              youtubeVideoUrl\n              screenshots {\n                description\n                fluid(maxWidth: 2000, sizes: \"4\") {\n                  aspectRatio\n                  sizes\n                  src\n                  srcSet\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const categories = categoryOrder.map(slug =>\n    data.allContentfulDataSummaryCategory.nodes.find(\n      node => node.slug === slug,\n    ),\n  )\n\n  return (\n    <>\n      <TableOfContentsWrapper topMargin>\n        <ul className={summaryStyle.toc}>\n          {categories.map(({ title, summaries }) => (\n            <>\n              <li>\n                <strong>{title}</strong>\n                <ul>\n                  {summaries.map(summary => (\n                    <li>\n                      <Link to={`#${summary.slug}`}>{summary.title}</Link>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n            </>\n          ))}\n        </ul>\n      </TableOfContentsWrapper>\n      {categories.map(({ title, summaries }) => (\n        <>\n          <h2 className={summaryStyle.category}>{title}</h2>\n          {summaries.map(summary => (\n            <Summary key={summary.slug} summary={summary} />\n          ))}\n        </>\n      ))}\n    </>\n  )\n}\n\nexport default DataSummary\n\nexport { Summary }\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport DataSummary from '~components/pages/about-data/data-summary'\nimport ContentfulContent from '~components/common/contentful-content'\nimport Layout from '~components/layout'\n\nconst DataSummaryPage = ({ data }) => (\n  <Layout title=\"Data Summary\" centered>\n    <ContentfulContent\n      content={\n        data.contentfulSnippet.childContentfulSnippetContentTextNode\n          .childMarkdownRemark.html\n      }\n      id={data.contentfulSnippet.contentful_id}\n    />\n    <DataSummary />\n  </Layout>\n)\n\nexport default DataSummaryPage\n\nexport const query = graphql`\n  query {\n    contentfulSnippet(slug: { eq: \"data-summary-lede\" }) {\n      contentful_id\n      childContentfulSnippetContentTextNode {\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}