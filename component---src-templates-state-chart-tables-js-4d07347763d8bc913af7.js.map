{"version":3,"sources":["webpack:///./src/components/pages/data/chart-tables.js","webpack:///./src/templates/state/chart-tables.js","webpack:///./src/components/utils/format.js","webpack:///./src/components/layout/index.js","webpack:///./src/components/common/table.module.scss","webpack:///./src/scss/global.scss","webpack:///./src/components/common/table.js","webpack:///./src/components/common/detail-text.js","webpack:///./src/components/common/detail-text.module.scss"],"names":["perMillion","percent","Math","round","ChartTable","children","includeNational","header","alignLeft","isFirst","ChartTables","history","usHistory","testSource","testUnits","testField","dailyAverage","row","field","index","findIndex","item","date","sum","length","i","push","reduce","a","b","to","id","map","key","format","number","childPopulation","positiveIncrease","find","hospitalizedCurrently","deathIncrease","StateChartTablesPage","pageContext","data","path","state","allCovidStateDaily","covidStateInfo","allCovidUsDaily","allContentfulChartAnnotation","title","name","returnLinks","link","childSlug","slug","nodes","annotations","covidTrackingProjectPreferredTotalTestField","covidTrackingProjectPreferredTotalTestUnits","formatDateToString","DateTime","fromISO","setZone","toFormat","replace","FormatDate","timezone","FormatNumber","roundedNumber","nullValue","precision","nullDisplay","precisionDenominator","parseFloat","toLocaleString","getListSpacer","useAmpersand","andSign","FormatItemList","items","keys","listSpacer","undefined","FormatItemOrList","getOrListSpacer","Layout","displayTitle","titleLink","returnLinksContent","description","noMargin","hasHero","centered","socialCard","hero","centerTitle","hidewarning","flipColors","noContainer","forceSubNavigationKey","useStaticQuery","siteTitle","site","siteMetadata","module","exports","Th","colSpan","columnWidth","additionalClass","wide","sortDirection","sortable","onClick","scope","thClasses","tableStyle","borderLeft","className","classnames","role","type","sortButton","sort","aria-label","headerLabel","headerLabelHidden","Td","rowspan","tdClasses","rowSpan","Table","tableLabel","ariaHidden","aria-hidden","table","DetailText","small","detailTextStyles","detailText"],"mappings":"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","file":"component---src-templates-state-chart-tables-js-4d07347763d8bc913af7.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { Table, Td, Th } from '~components/common/table'\nimport { FormatDate, FormatNumber } from '~components/utils/format'\n\nconst perMillion = percent => Math.round(percent * 1000000)\n\nconst ChartTable = ({ children, includeNational = false }) => (\n  <Table>\n    <thead>\n      <tr>\n        <Th header alignLeft>\n          Date\n        </Th>\n        <Th isFirst>State</Th>\n        <Th>State 7-day average</Th>\n        <Th>State 1/million</Th>\n        {includeNational && <Th>National 1/million</Th>}\n      </tr>\n    </thead>\n    <tbody>{children}</tbody>\n  </Table>\n)\n\nconst ChartTables = ({ history, usHistory, testSource, testUnits }) => {\n  const testField = `${\n    testSource === 'posNeg' ? 'totalTestResults' : testSource\n  }Increase`\n  const dailyAverage = (row, field) => {\n    const index = history.findIndex(item => item.date === row.date)\n    const sum = []\n    if (index > history.length - 7) {\n      return null\n    }\n    for (let i = index; i < index + 7; i += 1) {\n      sum.push(history[i][field])\n    }\n    return Math.round(sum.reduce((a, b) => a + b, 0) / sum.length)\n  }\n  return (\n    <>\n      <ul>\n        <li>\n          <Link to=\"#chart-table-new-tests\">New tests</Link>\n        </li>\n        <li>\n          <Link to=\"#chart-table-new-cases\">New cases</Link>\n        </li>\n        <li>\n          <Link to=\"#chart-table-hospitalizations\">\n            Current hospitalizations\n          </Link>\n        </li>\n        <li>\n          <Link to=\"#chart-table-deaths\">New deaths</Link>\n        </li>\n      </ul>\n      <h2 id=\"chart-table-new-tests\">New tests ({testUnits})</h2>\n      <ChartTable>\n        {history.map(row => (\n          <tr key={`tests-${row.date}`}>\n            <Td alignLeft>\n              <FormatDate date={row.date} format=\"LLL d yyyy\" />\n            </Td>\n            <Td isFirst>\n              <FormatNumber number={row[testField]} />\n            </Td>\n            <Td>\n              <FormatNumber number={dailyAverage(row, testField)} />\n            </Td>\n            <Td>\n              <FormatNumber\n                number={perMillion(row.childPopulation[testField].percent)}\n              />\n            </Td>\n          </tr>\n        ))}\n      </ChartTable>\n      <h2 id=\"chart-table-new-cases\">New cases</h2>\n      <ChartTable includeNational>\n        {history.map(row => (\n          <tr key={`cases-${row.date}`}>\n            <Td alignLeft>\n              <FormatDate date={row.date} format=\"LLL d yyyy\" />\n            </Td>\n            <Td isFirst>\n              <FormatNumber number={row.positiveIncrease} />\n            </Td>\n            <Td>\n              <FormatNumber number={dailyAverage(row, 'positiveIncrease')} />\n            </Td>\n            <Td>\n              <FormatNumber\n                number={perMillion(\n                  row.childPopulation.positiveIncrease.percent,\n                )}\n              />\n            </Td>\n            <Td>\n              <FormatNumber\n                number={perMillion(\n                  usHistory.find(item => item.date === row.date).childPopulation\n                    .positiveIncrease.percent,\n                )}\n              />\n            </Td>\n          </tr>\n        ))}\n      </ChartTable>\n      <h2 id=\"chart-table-hospitalizations\">Current hospitalizations</h2>\n      <ChartTable includeNational>\n        {history.map(row => (\n          <tr key={`hospitalizations-${row.date}`}>\n            <Td alignLeft>\n              <FormatDate date={row.date} format=\"LLL d yyyy\" />\n            </Td>\n            <Td isFirst>{row.hospitalizedCurrently}</Td>\n            <Td>\n              <FormatNumber\n                number={dailyAverage(row, 'hospitalizedCurrently')}\n              />\n            </Td>\n            <Td>\n              <FormatNumber\n                number={perMillion(\n                  row.childPopulation.hospitalizedCurrently.percent,\n                )}\n              />\n            </Td>\n            <Td>\n              <FormatNumber\n                number={perMillion(\n                  usHistory.find(item => item.date === row.date).childPopulation\n                    .hospitalizedCurrently.percent,\n                )}\n              />\n            </Td>\n          </tr>\n        ))}\n      </ChartTable>\n      <h2 id=\"chart-table-deaths\">New deaths</h2>\n      <ChartTable includeNational>\n        {history.map(row => (\n          <tr key={`death-${row.date}`}>\n            <Td alignLeft>\n              <FormatDate date={row.date} format=\"LLL d yyyy\" />\n            </Td>\n            <Td isFirst>{row.deathIncrease}</Td>\n            <Td>\n              <FormatNumber number={dailyAverage(row, 'deathIncrease')} />\n            </Td>\n            <Td>\n              <FormatNumber\n                number={perMillion(row.childPopulation.deathIncrease.percent)}\n              />\n            </Td>\n            <Td>\n              <FormatNumber\n                number={perMillion(\n                  usHistory.find(item => item.date === row.date).childPopulation\n                    .deathIncrease.percent,\n                )}\n              />\n            </Td>\n          </tr>\n        ))}\n      </ChartTable>\n    </>\n  )\n}\n\nexport default ChartTables\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '~components/layout'\nimport ChartTables from '~components/pages/data/chart-tables'\n\nconst StateChartTablesPage = ({ pageContext, data, path }) => {\n  const state = pageContext\n  const {\n    allCovidStateDaily,\n    covidStateInfo,\n    allCovidUsDaily,\n    allContentfulChartAnnotation,\n  } = data\n  return (\n    <Layout\n      title={`${state.name} chart data`}\n      returnLinks={[\n        { link: '/data' },\n        { link: `/data/state/${state.childSlug.slug}`, title: state.name },\n      ]}\n      path={path}\n    >\n      <ChartTables\n        history={allCovidStateDaily.nodes}\n        usHistory={allCovidUsDaily.nodes}\n        annotations={allContentfulChartAnnotation}\n        testSource={\n          covidStateInfo.covidTrackingProjectPreferredTotalTestField ===\n          'posNeg'\n            ? 'totalTestResults'\n            : covidStateInfo.covidTrackingProjectPreferredTotalTestField\n        }\n        testUnits={covidStateInfo.covidTrackingProjectPreferredTotalTestUnits}\n      />\n    </Layout>\n  )\n}\n\nexport default StateChartTablesPage\n\nexport const query = graphql`\n  query($state: String!) {\n    covidStateInfo(state: { eq: $state }) {\n      state\n      covidTrackingProjectPreferredTotalTestField\n      covidTrackingProjectPreferredTotalTestUnits\n      childPopulation {\n        population\n      }\n    }\n    allCovidUsDaily {\n      nodes {\n        date(formatString: \"YYYYMMDD\")\n        childPopulation {\n          deathIncrease {\n            percent\n          }\n          positiveIncrease {\n            percent\n          }\n          hospitalizedCurrently {\n            percent\n          }\n        }\n      }\n    }\n    allCovidStateDaily(\n      filter: { state: { eq: $state } }\n      sort: { fields: date, order: DESC }\n    ) {\n      nodes {\n        totalTestEncountersViralIncrease\n        totalTestsViralIncrease\n        totalTestsPeopleViralIncrease\n        totalTestResultsIncrease\n        positiveIncrease\n        hospitalizedCurrently\n        deathIncrease\n        date(formatString: \"YYYYMMDD\")\n        childPopulation {\n          deathIncrease {\n            percent\n          }\n          hospitalizedCurrently {\n            percent\n          }\n          positiveIncrease {\n            percent\n          }\n          totalTestEncountersViralIncrease {\n            percent\n          }\n          totalTestsViralIncrease {\n            percent\n          }\n          totalTestsPeopleViralIncrease {\n            percent\n          }\n          totalTestResultsIncrease {\n            percent\n          }\n        }\n      }\n    }\n    allContentfulChartAnnotation(\n      filter: { state: { code: { eq: $state } } }\n      sort: { fields: date, order: DESC }\n    ) {\n      nodes {\n        title\n        description {\n          description\n        }\n        date(formatString: \"YYYYMMDD\")\n        dataElement\n        contentful_id\n        childContentfulChartAnnotationDescriptionTextNode {\n          childMarkdownRemark {\n            html\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport { DateTime } from 'luxon'\n\nfunction lowercaseMeridiem(dateString) {\n  return dateString.replace('AM', 'am').replace('PM', 'pm')\n}\n\nfunction formatDateToString(date, format = 'ccc LLL d yyyy h:mm a') {\n  if (typeof date === 'undefined') {\n    return null\n  }\n  return lowercaseMeridiem(\n    DateTime.fromISO(date)\n      .setZone('America/New_York')\n      .toFormat(format),\n  )\n}\n\nconst FormatDate = ({\n  date,\n  format = 'ccc LLL d yyyy h:mm a',\n  timezone = true,\n}) => {\n  // tokens spec: https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens\n  return (\n    <>\n      {timezone\n        ? formatDateToString(date, format)\n        : DateTime.fromISO(date).toFormat(format)}\n    </>\n  )\n}\n\nconst FormatNumber = ({ number, nullValue = false, precision = 0 }) => {\n  const nullDisplay = nullValue || 'N/A'\n  let roundedNumber\n  if (precision === 0) {\n    roundedNumber = number\n  } else {\n    const precisionDenominator = 10 ** precision\n    roundedNumber =\n      Math.round(parseFloat(number) * precisionDenominator) /\n      precisionDenominator\n  }\n  return (\n    <>{roundedNumber !== null ? roundedNumber.toLocaleString() : nullDisplay}</>\n  )\n}\n\nconst getListSpacer = (index, length, useAmpersand = true) => {\n  const andSign = useAmpersand ? '&' : 'and'\n  if (index === 0 && length === 2) {\n    return ` ${andSign} ` // first item, only two items in the list\n  }\n  if (index === length - 2) {\n    return `, ${andSign} ` // second to last item\n  }\n  if (index === length - 1) {\n    return '' // last item\n  }\n  return ', '\n}\n\nconst getOrListSpacer = (index, length) => {\n  if (index === 0 && length === 2) {\n    return ' or ' // first item, only two items in the list\n  }\n  if (index === length - 2) {\n    return ', or ' // second to last item\n  }\n  if (index === length - 1) {\n    return '' // last item\n  }\n  return ', '\n}\n\n/**\n * Separates a list of components by `&` or `and`\n *\n * @param {array} items A list of components\n * @param {array} keys The keys to use for the items\n * @returns {string} The formatted fragment\n */\nconst FormatItemList = ({ items, keys, useAmpersand = true }) => {\n  const { length } = items\n  return (\n    <>\n      {items.map((item, index) => {\n        const listSpacer = getListSpacer(index, length, useAmpersand)\n        return (\n          <Fragment key={keys[index]}>\n            {item}\n            {listSpacer === '' ? undefined : listSpacer}\n          </Fragment>\n        )\n      })}\n    </>\n  )\n}\n\n/**\n * Separates a list of components by `,` and `or`.\n *\n * @param {array} items A list of components\n * @param {array} keys The keys to use for the items\n * @returns {string} The formatted fragment\n */\nconst FormatItemOrList = ({ items, keys }) => {\n  const { length } = items\n  return (\n    <>\n      {items.map((item, index) => {\n        const listSpacer = getOrListSpacer(index, length)\n        return (\n          <Fragment key={keys[index]}>\n            {item}\n            {listSpacer === '' ? undefined : listSpacer}\n          </Fragment>\n        )\n      })}\n    </>\n  )\n}\n\n/**\n * Separates a list of strings by `&` or `and`\n *\n * @param {array} items A list of strings to be formatted\n * @returns {string} The formatted list\n */\nconst formatStringList = (items, useAmpersand = true) => {\n  const { length } = items\n  return items.reduce(\n    (acc, item, idx) => acc + item + getListSpacer(idx, length, useAmpersand),\n    '',\n  )\n}\n\nexport {\n  FormatDate,\n  FormatNumber,\n  lowercaseMeridiem,\n  formatDateToString,\n  FormatItemList,\n  FormatItemOrList,\n  formatStringList,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { SkipNavContent } from '@reach/skip-nav'\nimport Header from './header'\nimport Footer from './footer'\nimport SEO from '~components/utils/seo'\nimport Container from '~components/common/container'\nimport SkipNavigation from '~components/utils/skip-navigation'\nimport '~scss/global.scss'\n\nconst Layout = ({\n  title,\n  displayTitle,\n  titleLink,\n  path,\n  returnLinks,\n  returnLinksContent,\n  description,\n  children,\n  noMargin,\n  hasHero,\n  centered,\n  socialCard,\n  hero,\n  centerTitle,\n  hidewarning = false,\n  flipColors = false,\n  noContainer = false,\n  forceSubNavigationKey = false,\n}) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <SEO title={title} description={description} socialCard={socialCard} />\n      <SkipNavigation />\n      <Header\n        siteTitle={data.site.siteMetadata.title}\n        title={displayTitle || title}\n        titleLink={titleLink}\n        path={path}\n        noMargin={noMargin}\n        hasHero={hasHero}\n        returnLinks={returnLinks}\n        returnLinksContent={returnLinksContent}\n        hero={hero}\n        centerTitle={centerTitle}\n        forceSubNavigationKey={forceSubNavigationKey}\n        flipColors={flipColors}\n        hidewarning={hidewarning}\n      />\n      <main id=\"main\">\n        <SkipNavContent />\n        {noContainer ? (\n          <>{children}</>\n        ) : (\n          <Container centered={centered}>{children}</Container>\n        )}\n      </main>\n      <Footer flipColors={flipColors} />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewportSm\":\"480px\",\"viewportMs\":\"640px\",\"viewportMd\":\"768px\",\"viewportLg\":\"1080px\",\"viewportXl\":\"1200px\",\"text\":\"#303030\",\"link\":\"#000\",\"linkActive\":\"#8b8dc7\",\"colorPlum100\":\"#f2f2ff\",\"colorPlum200\":\"#d1d1e8\",\"colorPlum300\":\"#b6b7db\",\"colorPlum400\":\"#8b8dc7\",\"colorPlum500\":\"#6164ba\",\"colorPlum600\":\"#575aad\",\"colorPlum700\":\"#31347a\",\"colorPlum800\":\"#111354\",\"colorHoney100\":\"#fcf9eb\",\"colorHoney200\":\"#fbe8a9\",\"colorHoney300\":\"#f6ce7a\",\"colorHoney400\":\"#ffad4a\",\"colorHoney500\":\"#e2894e\",\"colorHoney600\":\"#c66b3e\",\"colorHoney700\":\"#924f34\",\"colorHoney800\":\"#6e2f1f\",\"colorBlueberry100\":\"#e2f1fc\",\"colorBlueberry200\":\"#8cc7f4\",\"colorBlueberry300\":\"#0091ea\",\"colorBlueberry400\":\"#004399\",\"colorBlueberry500\":\"#012656\",\"colorSlate100\":\"#edf1f2\",\"colorSlate200\":\"#d2d6d7\",\"colorSlate300\":\"#b7bcbd\",\"colorSlate400\":\"#9ca1a2\",\"colorSlate500\":\"#828688\",\"colorSlate600\":\"#676b6d\",\"colorSlate700\":\"#4c5153\",\"colorSlate800\":\"#313638\",\"colorStrawberry100\":\"#fbbcb2\",\"colorStrawberry200\":\"#dc472e\",\"qualitativeColorPalette100\":\"#b5e3db\",\"qualiTativecolorPalette200\":\"#cc0\",\"qualiTativecolorPalette300\":\"#a19bca\",\"qualiTativecolorPalette400\":\"#f4a071\",\"qualiTativecolorPalette500\":\"#2f6488\",\"qualiTativecolorPalette600\":\"#527740\",\"crdtAsian\":\"#E35942\",\"crdtWhite\":\"#cc0\",\"crdtBlack\":\"#a19bca\",\"crdtLatinx\":\"#f4a071\",\"crdtNonHispanic\":\"#111354\",\"crdtNhpi\":\"#2f6488\",\"crdtAian\":\"#527740\",\"alignLeft\":\"_972ec\",\"borderLeft\":\"_4c21d\",\"headerLabel\":\"_48594\",\"headerLabel3\":\"_87c8d\",\"headerLabel4\":\"_8bd24\",\"headerLabel5\":\"_1ee0f\",\"headerLabelHidden\":\"a0e2a\",\"table\":\"e1fd0\",\"sort\":\"_903bc\",\"sortButton\":\"c8fff\",\"wide\":\"_588d8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewportSm\":\"480px\",\"viewportMs\":\"640px\",\"viewportMd\":\"768px\",\"viewportLg\":\"1080px\",\"viewportXl\":\"1200px\",\"text\":\"#303030\",\"link\":\"#000\",\"linkActive\":\"#8b8dc7\",\"colorPlum100\":\"#f2f2ff\",\"colorPlum200\":\"#d1d1e8\",\"colorPlum300\":\"#b6b7db\",\"colorPlum400\":\"#8b8dc7\",\"colorPlum500\":\"#6164ba\",\"colorPlum600\":\"#575aad\",\"colorPlum700\":\"#31347a\",\"colorPlum800\":\"#111354\",\"colorHoney100\":\"#fcf9eb\",\"colorHoney200\":\"#fbe8a9\",\"colorHoney300\":\"#f6ce7a\",\"colorHoney400\":\"#ffad4a\",\"colorHoney500\":\"#e2894e\",\"colorHoney600\":\"#c66b3e\",\"colorHoney700\":\"#924f34\",\"colorHoney800\":\"#6e2f1f\",\"colorBlueberry100\":\"#e2f1fc\",\"colorBlueberry200\":\"#8cc7f4\",\"colorBlueberry300\":\"#0091ea\",\"colorBlueberry400\":\"#004399\",\"colorBlueberry500\":\"#012656\",\"colorSlate100\":\"#edf1f2\",\"colorSlate200\":\"#d2d6d7\",\"colorSlate300\":\"#b7bcbd\",\"colorSlate400\":\"#9ca1a2\",\"colorSlate500\":\"#828688\",\"colorSlate600\":\"#676b6d\",\"colorSlate700\":\"#4c5153\",\"colorSlate800\":\"#313638\",\"colorStrawberry100\":\"#fbbcb2\",\"colorStrawberry200\":\"#dc472e\",\"qualitativeColorPalette100\":\"#b5e3db\",\"qualiTativecolorPalette200\":\"#cc0\",\"qualiTativecolorPalette300\":\"#a19bca\",\"qualiTativecolorPalette400\":\"#f4a071\",\"qualiTativecolorPalette500\":\"#2f6488\",\"qualiTativecolorPalette600\":\"#527740\",\"crdtAsian\":\"#E35942\",\"crdtWhite\":\"#cc0\",\"crdtBlack\":\"#a19bca\",\"crdtLatinx\":\"#f4a071\",\"crdtNonHispanic\":\"#111354\",\"crdtNhpi\":\"#2f6488\",\"crdtAian\":\"#527740\"};","import React from 'react'\nimport classnames from 'classnames'\nimport DetailText from './detail-text'\nimport tableStyle from './table.module.scss'\n\nconst Th = ({\n  children,\n  colSpan,\n  header,\n  isFirst,\n  alignLeft,\n  columnWidth,\n  additionalClass,\n  wide,\n  sortDirection,\n  sortable,\n  onClick,\n  scope,\n}) => {\n  const thClasses = []\n  if (alignLeft) {\n    thClasses.push(tableStyle.alignLeft)\n  }\n  if (isFirst) {\n    thClasses.push(tableStyle.borderLeft)\n  }\n  if (wide) {\n    thClasses.push(tableStyle.wide)\n  }\n  if (additionalClass) {\n    thClasses.push(additionalClass)\n  }\n\n  const role = 'text'\n\n  return (\n    <th\n      scope={scope || 'col'}\n      colSpan={colSpan}\n      className={classnames(thClasses)}\n    >\n      <span role={role}>\n        {sortable ? (\n          <button\n            type=\"button\"\n            className={tableStyle.sortButton}\n            onClick={onClick}\n          >\n            {sortDirection === 'up' && (\n              <abbr\n                className={tableStyle.sort}\n                title=\"Sort up\"\n                aria-label=\"Sort up\"\n              >\n                ↑\n              </abbr>\n            )}\n            {sortDirection === 'down' && (\n              <abbr\n                className={tableStyle.sort}\n                title=\"Sort down\"\n                aria-label=\"Sort down\"\n              >\n                ↓\n              </abbr>\n            )}\n            {children}\n          </button>\n        ) : (\n          <>{children}</>\n        )}\n        {header && (\n          <span\n            className={`${\n              isFirst ? tableStyle.headerLabel : tableStyle.headerLabelHidden\n            }${\n              columnWidth &&\n              typeof tableStyle[`headerLabel${columnWidth}`] !== 'undefined'\n                ? ` ${tableStyle[`headerLabel${columnWidth}`]}`\n                : ''\n            }`}\n          >\n            {header}\n          </span>\n        )}\n      </span>\n    </th>\n  )\n}\n\nconst Td = ({ children, alignLeft, isFirst, additionalClass, rowspan }) => {\n  const tdClasses = []\n  if (alignLeft) {\n    tdClasses.push(tableStyle.alignLeft)\n  }\n  if (isFirst) {\n    tdClasses.push(tableStyle.borderLeft)\n  }\n  if (additionalClass) {\n    tdClasses.push(additionalClass)\n  }\n  if (rowspan) {\n    return (\n      <td className={classnames(tdClasses)} rowSpan={rowspan}>\n        {children}\n      </td>\n    )\n  }\n\n  return <td className={classnames(tdClasses)}>{children}</td>\n}\n\nconst Table = ({ children, tableLabel, ariaHidden, className }) => (\n  <div>\n    <table\n      aria-hidden={ariaHidden}\n      className={classnames(tableStyle.table, className)}\n    >\n      {children}\n    </table>\n    {tableLabel && <DetailText>{tableLabel}</DetailText>}\n  </div>\n)\n\nexport { Th, Td, Table }\n","import React from 'react'\nimport classnames from 'classnames'\nimport detailTextStyles from './detail-text.module.scss'\n\nconst DetailText = ({\n  children,\n  className,\n  small = false,\n  centered = false,\n}) => (\n  <div\n    className={classnames(\n      'detail-text',\n      detailTextStyles.detailText,\n      centered && detailTextStyles.centered,\n      small && detailTextStyles.small,\n      className,\n    )}\n  >\n    {children}\n  </div>\n)\n\nexport default DetailText\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewportSm\":\"480px\",\"viewportMs\":\"640px\",\"viewportMd\":\"768px\",\"viewportLg\":\"1080px\",\"viewportXl\":\"1200px\",\"text\":\"#303030\",\"link\":\"#000\",\"linkActive\":\"#8b8dc7\",\"colorPlum100\":\"#f2f2ff\",\"colorPlum200\":\"#d1d1e8\",\"colorPlum300\":\"#b6b7db\",\"colorPlum400\":\"#8b8dc7\",\"colorPlum500\":\"#6164ba\",\"colorPlum600\":\"#575aad\",\"colorPlum700\":\"#31347a\",\"colorPlum800\":\"#111354\",\"colorHoney100\":\"#fcf9eb\",\"colorHoney200\":\"#fbe8a9\",\"colorHoney300\":\"#f6ce7a\",\"colorHoney400\":\"#ffad4a\",\"colorHoney500\":\"#e2894e\",\"colorHoney600\":\"#c66b3e\",\"colorHoney700\":\"#924f34\",\"colorHoney800\":\"#6e2f1f\",\"colorBlueberry100\":\"#e2f1fc\",\"colorBlueberry200\":\"#8cc7f4\",\"colorBlueberry300\":\"#0091ea\",\"colorBlueberry400\":\"#004399\",\"colorBlueberry500\":\"#012656\",\"colorSlate100\":\"#edf1f2\",\"colorSlate200\":\"#d2d6d7\",\"colorSlate300\":\"#b7bcbd\",\"colorSlate400\":\"#9ca1a2\",\"colorSlate500\":\"#828688\",\"colorSlate600\":\"#676b6d\",\"colorSlate700\":\"#4c5153\",\"colorSlate800\":\"#313638\",\"colorStrawberry100\":\"#fbbcb2\",\"colorStrawberry200\":\"#dc472e\",\"qualitativeColorPalette100\":\"#b5e3db\",\"qualiTativecolorPalette200\":\"#cc0\",\"qualiTativecolorPalette300\":\"#a19bca\",\"qualiTativecolorPalette400\":\"#f4a071\",\"qualiTativecolorPalette500\":\"#2f6488\",\"qualiTativecolorPalette600\":\"#527740\",\"crdtAsian\":\"#E35942\",\"crdtWhite\":\"#cc0\",\"crdtBlack\":\"#a19bca\",\"crdtLatinx\":\"#f4a071\",\"crdtNonHispanic\":\"#111354\",\"crdtNhpi\":\"#2f6488\",\"crdtAian\":\"#527740\",\"detailText\":\"_9c10b\",\"small\":\"bdbe3\",\"centered\":\"_1aaf0\"};"],"sourceRoot":""}